// src/data/cppCourseData.js
const cppCourseData = {
    courseId: 'cpp-core',
    title: 'C++ Core',
    sidebarTitle: 'C++ Core',
    description: '', 
    language: 'cpp',
    topics: [
        {
            topicId: 'intro-cpp',
            name: '[ 1 ] –í–≤–µ–¥–µ–Ω–∏–µ –≤ C++',
            tasks: [
              {
                id: 'hello-world',
                title: '–ù–∞–ø–∏—à–∏—Ç–µ ¬´Hello, World!¬ª',
                description: `
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ C++! üíª

–≠—Ç–æ —Ç–≤–æ—ë –ø–µ—Ä–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ, –∏ –æ–Ω–æ –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–π —à–∞–≥ –∫ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- üìå –í C++ –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ —ç–∫—Ä–∞–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç \`std::cout\`.
- üìå –ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å \`std::cout\`, –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é –¥–∏—Ä–µ–∫—Ç–∏–≤—ã \`#include <iostream>\`.
- üìå –ö–æ–º–∞–Ω–¥—ã C++ –ø–∏—à—É—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ \`main()\`.
- üìå –ö–∞–∂–¥–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ç–æ—á–∫–æ–π —Å –∑–∞–ø—è—Ç–æ–π (\`;\`).

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –ü–æ–¥–∫–ª—é—á–∏ –∑–∞–≥–æ–ª–æ–≤–æ—á–Ω—ã–π —Ñ–∞–π–ª: \`#include <iostream>\`
2. –û–±—ä—è–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é \`main()\`
3. –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë –≤—ã–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç: \`Hello, World!\` —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

–ï—Å–ª–∏ –≤—Å—ë —Å–¥–µ–ª–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç—ã —É–≤–∏–¥–∏—à—å –≤ –∫–æ–Ω—Å–æ–ª–∏:

\`\`\`
Hello, World!
\`\`\`

–ù–∞—á–Ω—ë–º –ø—Ä–æ—Å—Ç–æ ‚Äî –∏ –¥–≤–∏–Ω–µ–º—Å—è –¥–∞–ª—å—à–µ –ø–æ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–º—É –ø—É—Ç–∏ –∏–∑—É—á–µ–Ω–∏—è C++! üöÄ
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –í–∞—à –∫–æ–¥ –∑–¥–µ—Å—å
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              std::cout << "Hello, World!" << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^Hello, World!$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: Hello, World!'
                  }
                ],
                xp: 5,
                difficulty: 'Info'
              },
              {
                id: 'compare-compilers',
                title: '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç—Ä—ë—Ö –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ C++',
                description: `
üîç –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å —Ç—Ä–µ–º—è –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞–º–∏ C++: **g++**, **clang** –∏ **MSVC**. –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–∏–π –º–µ–∂–¥—É –Ω–∏–º–∏ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ª—É—á—à–µ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ —Å—Ä–µ–¥–∞—Ö —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- üß∞ **g++** ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä GCC, —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Linux.
- üß∞ **clang** ‚Äî –±—ã—Å—Ç—Ä—ã–π –∏ –º–æ–¥—É–ª—å–Ω—ã–π –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –æ—Ç LLVM, –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ Linux –∏ MacOS.
- üß∞ **MSVC** ‚Äî –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä –æ—Ç Microsoft, –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ Visual Studio –Ω–∞ Windows.

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –†–∞–∑–±–µ—Ä–∏—Å—å, –∫–∞–∫ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–∞–∂–¥—ã–π –∏–∑ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤:
   - Linux/Mac: **g++**, **clang**
   - Windows: **MSVC** –∏–ª–∏ **MinGW**
2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ —Ñ–∞–π–ª–∞ \`main.cpp\`:
   - –ü—Ä–∏–º–µ—Ä: \`g++ main.cpp -o main\`
3. –°–æ—Å—Ç–∞–≤—å —Ç–∞–±–ª–∏—Ü—É üìä —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–≤ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º:
   - –°–∫–æ—Ä–æ—Å—Ç—å –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ ‚ö°
   - –†–∞–∑–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞ üì¶
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤ C++ üìö

---

üìå –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–¥–µ–ª–∞—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–∞ –ø–æ–¥ —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏ –∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å —ç–∫–æ—Å–∏—Å—Ç–µ–º—É C++.

–£–¥–∞—á–∏ –≤ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏! üîßüí™
`,
                starterCode: `// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞. –ù–∞–ø—Ä–∏–º–µ—Ä:
          // g++ main.cpp -o main
          // clang++ main.cpp -o main
          // cl /EHsc main.cpp
          //
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö.`,
                solution: `// –ü—Ä–∏–º–µ—Ä –¥–ª—è g++ (Linux/Mac):
          // g++ main.cpp -o main
          // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: —à–∏—Ä–æ–∫–æ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ, —Ö–æ—Ä–æ—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–≤, –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è O2
          // –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ –∫—Ä—É–ø–Ω—ã–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–∏
          
          // –ü—Ä–∏–º–µ—Ä –¥–ª—è clang++ (Linux/Mac):
          // clang++ main.cpp -o main
          // –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: –±—ã—Å—Ç—Ä—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ LLVM
          // –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: —á—É—Ç—å –±–æ–ª–µ–µ –º–µ–¥–ª–µ–Ω–Ω—ã–π –±—ç–∫–µ–Ω–¥ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ vs g++
          
          /*
          –ü—Ä–∏–º–µ—Ä –¥–ª—è MSVC (Windows):
          –û—Ç–∫—Ä–æ–π—Ç–µ Developer Command Prompt for VS –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
          cl /EHsc main.cpp
          
          –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞: –æ—Ç–ª–∏—á–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Visual Studio, –æ—Ç–ª–∞–¥–∫–∞ –≤ IDE
          –ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏: —Å–ø–µ—Ü–∏—Ñ–∏—á–µ–Ω –¥–ª—è Windows, –º–µ–Ω–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω –≤–Ω–µ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã Microsoft
          */
          `,
                testCases: [], // –ù–µ—Ç –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤, –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'build-script',
                title: '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç',
                description: `
üîß –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞–ø–∏—à–µ—à—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–æ—Å—Ç–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- üñ•Ô∏è Bash –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Linux/Mac, –∞ Batch-—Ñ–∞–π–ª—ã ‚Äî –≤ Windows.
- ‚öôÔ∏è –§–ª–∞–≥ \`-O2\` –≤–∫–ª—é—á–∞–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.
- üìÅ –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω —É–º–µ—Ç—å –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏.

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –°–æ–∑–¥–∞–π —Å–∫—Ä–∏–ø—Ç:
   - Bash: \`build_and_run.sh\`
   - Batch: \`build_and_run.bat\`
2. –í —Å–∫—Ä–∏–ø—Ç–µ —Ä–µ–∞–ª–∏–∑—É–π —Å–ª–µ–¥—É—é—â–µ–µ:
   - –ü—Ä–æ–≤–µ—Ä–∫–∞: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª \`main.cpp\` –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
   - –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å —Ñ–ª–∞–≥–æ–º: \`-O2\` ‚Üí \`g++ main.cpp -O2 -o main\`
   - –ï—Å–ª–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ ‚Äî –∑–∞–ø—É—Å—Ç–∏ –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª
   - –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ ‚Äî –≤—ã–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–π —Ä–∞–±–æ—Ç—É

---

üìå –¢–∞–∫–æ–π —Å–∫—Ä–∏–ø—Ç –ø–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ç–≤–æ–µ–≥–æ –∫–æ–¥–∞.

–ù–∞—á–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É —É–∂–µ —Å–µ–π—á–∞—Å! ü§ñ‚ú®
`,
                starterCode: `#!/bin/bash
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ main.cpp
          if [ ! -f "main.cpp" ]; then
              echo "–§–∞–π–ª main.cpp –Ω–µ –Ω–∞–π–¥–µ–Ω."
              exit 1
          fi
          
          # –ö–æ–º–∞–Ω–¥–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
          #g++ -O2 main.cpp -o main
          
          # –ï—Å–ª–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, –∑–∞–ø—É—Å—Ç–∏—Ç—å ./main
          # ./main
          `,
                solution: `#!/bin/bash
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ main.cpp
          if [ ! -f "main.cpp" ]; then
              echo "–§–∞–π–ª main.cpp –Ω–µ –Ω–∞–π–¥–µ–Ω."
              exit 1
          fi
          
          # –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π -O2
          g++ -O2 main.cpp -o main
          if [ $? -ne 0 ]; then
              echo "–û—à–∏–±–∫–∞ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏."
              exit 1
          fi
          
          # –ó–∞–ø—É—Å–∫ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞
          ./main`,
                testCases: [], // –ù–µ—Ç –∞–≤—Ç–æ—Ç–µ—Å—Ç–æ–≤, –∑–∞–¥–∞—á–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é –ø—É—Ç—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'variables-and-types',
            name: '[ 2 ] –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö',
            tasks: [
              {
                id: 'primitive-types',
                title: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤—Å–µ—Ö –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö —Ç–∏–ø–æ–≤',
                description: `
üì¶ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å –±–∞–∑–æ–≤—ã–º–∏ —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –≤ C++ –∏ –Ω–∞—É—á–∏—à—å—Å—è –∏—Ö –≤—ã–≤–æ–¥–∏—Ç—å —Å –ø–æ–º–æ—â—å—é \`std::cout\`.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- üî¢ **int** ‚Äî —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 5)
- üî¨ **double** ‚Äî —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3.14)
- üî§ **char** ‚Äî –æ–¥–∏–Ω–æ—á–Ω—ã–π —Å–∏–º–≤–æ–ª –≤ –æ–¥–∏–Ω–∞—Ä–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'A')
- ‚öôÔ∏è **bool** ‚Äî –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: \`true\` –∏–ª–∏ \`false\`
- üì§ –î–ª—è –≤—ã–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è \`std::cout\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π –ø–æ –æ–¥–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞:
   - \`int\`, \`double\`, \`char\`, \`bool\`
2. –í—ã–≤–µ–¥–∏ –∫–∞–∂–¥—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üîé –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
42
3.14
A
1
\`\`\`

üöÄ –≠—Ç–æ –±–∞–∑–æ–≤—ã–µ –∫–∏—Ä–ø–∏—á–∏–∫–∏ C++ ‚Äî —Å –Ω–∏–º–∏ —Ç—ã –ø–æ—Å—Ç—Ä–æ–∏—à—å –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ!
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
              // int a;
              // double b;
              // char c;
              // bool d;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å:
              // std::cout << a << std::endl;
              // std::cout << b << std::endl;
              // std::cout << c << std::endl;
              // std::cout << d << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int a = 42;
              double b = 3.14;
              char c = 'X';
              bool d = true;
          
              std::cout << a << std::endl;
              std::cout << b << std::endl;
              std::cout << c << std::endl;
              std::cout << d << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^42$',
                    message: '–ü–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å—Å—è int 42'
                  },
                  {
                    regex: '^3\\.14$',
                    message: '–í—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–æ–π –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å—Å—è double 3.14'
                  },
                  {
                    regex: '^X$',
                    message: '–¢—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–æ–π –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å—Å—è char X'
                  },
                  {
                    regex: '^1$',
                    message: '–ß–µ—Ç–≤—ë—Ä—Ç–æ–π —Å—Ç—Ä–æ–∫–æ–π –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å—Å—è bool (1 –¥–ª—è true)'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'signed-unsigned-demo',
                title: '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É signed –∏ unsigned',
                description: `
üßÆ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —É–∑–Ω–∞–µ—à—å, –≤ —á—ë–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É \`signed\` –∏ \`unsigned\` —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –≤ C++, –∏ –∫–∞–∫ –æ–Ω–∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É—é—Ç –æ–¥–Ω–∏ –∏ —Ç–µ –∂–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`signed int\` ‚Äî –º–æ–∂–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –∫–∞–∫ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ, —Ç–∞–∫ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, -1).
- \`unsigned int\` ‚Äî **—Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞**, –¥–∏–∞–ø–∞–∑–æ–Ω —Å–¥–≤–∏–Ω—É—Ç –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É.
- –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ \`-1\` –∫ \`unsigned int\` –¥–∞—ë—Ç –æ—á–µ–Ω—å –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –∏–∑-–∑–∞ —Å–ø–æ—Å–æ–±–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏.
- üì§ –ò—Å–ø–æ–ª—å–∑—É–π \`std::cout\` –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:
   - \`signed int si = -1;\`
   - \`unsigned int ui = static_cast<unsigned int>(-1);\`
2. –í—ã–≤–µ–¥–∏ –æ–±–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞ —ç–∫—Ä–∞–Ω, –ø–æ –æ–¥–Ω–æ–π –Ω–∞ —Å—Ç—Ä–æ–∫—É.

---

üîç –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
\`\`\`
-1
4294967295
\`\`\`

üìå –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ ‚Äî –æ—Ç–ª–∏—á–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –≤–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —á–∏—Å–µ–ª –≤ –ø–∞–º—è—Ç–∏! üí°
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ signed int –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ -1
              // signed int si;
          
              // –û–±—ä—è–≤—å—Ç–µ unsigned int –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ static_cast<unsigned int>(-1)
              // unsigned int ui;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ –∏—Ö:
              // std::cout << si << std::endl;
              // std::cout << ui << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              signed int si = -1;
              unsigned int ui = static_cast<unsigned int>(-1);
          
              std::cout << si << std::endl;
              std::cout << ui << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^-1$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "-1" –¥–ª—è signed int'
                  }
                  // –ó–Ω–∞—á–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–∑–Ω—ã–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ int, –ø–æ—ç—Ç–æ–º—É –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–≥–æ
                ],
                xp: 10,
                difficulty: 'Medium'
              },
              {
                id: 'enum-switch',
                title: '–ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ switch',
                description: `
üé® –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è–º–∏ (enum class) –≤ C++ –∏ –Ω–∞—É—á–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä \`switch\` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`enum class\` ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–±–æ—Ä –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç—å—é –≤–∏–¥–∏–º–æ—Å—Ç–∏.
- –ß—Ç–æ–±—ã –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∑–Ω–∞—á–µ–Ω–∏—é, –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å: \`Color::RED\`, \`Color::GREEN\` –∏ —Ç.–¥.
- \`switch\` –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ä–∞–∑–Ω—ã–π –∫–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ:
   - \`enum class Color { RED, GREEN, BLUE };\`
2. –°–æ–∑–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: \`Color col = Color::GREEN;\`
3. –ò—Å–ø–æ–ª—å–∑—É–π \`switch(col)\`, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏:
   - RED ‚Üí "–ö—Ä–∞—Å–Ω—ã–π"
   - GREEN ‚Üí "–ó–µ–ª—ë–Ω—ã–π"
   - BLUE ‚Üí "–°–∏–Ω–∏–π"

---

üìå –≠—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤—ã–±–æ—Ä –∏–∑ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤!

üß† –°–æ–≤–µ—Ç—ã:
- –ù–µ –∑–∞–±—É–¥—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é \`case Color::...\` –≤–Ω—É—Ç—Ä–∏ \`switch\`
- –î–æ–±–∞–≤—å \`default\` –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π üòâ

–£—Å–ø–µ—Ö–æ–≤ –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ C++! üö¶
`,
                starterCode: `#include <iostream>
          
          enum class Color {
              RED,
              GREEN,
              BLUE
          };
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é Color col –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ Color::GREEN
              // Color col = Color::GREEN;
          
              // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ switch –¥–ª—è –≤—ã–≤–æ–¥–∞:
              // switch (col) {
              //     case Color::RED:
              //         std::cout << "–ö—Ä–∞—Å–Ω—ã–π" << std::endl;
              //         break;
              //     // ...
              // }
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          enum class Color {
              RED,
              GREEN,
              BLUE
          };
          
          int main() {
              Color col = Color::GREEN;
          
              switch (col) {
                  case Color::RED:
                      std::cout << "–ö—Ä–∞—Å–Ω—ã–π" << std::endl;
                      break;
                  case Color::GREEN:
                      std::cout << "–ó–µ–ª—ë–Ω—ã–π" << std::endl;
                      break;
                  case Color::BLUE:
                      std::cout << "–°–∏–Ω–∏–π" << std::endl;
                      break;
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^–ó–µ–ª—ë–Ω—ã–π$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: –ó–µ–ª—ë–Ω—ã–π'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'operators-and-expressions',
            name: '[ 3 ] –ê—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
            tasks: [
              {
                id: 'arithmetic-expression',
                title: '–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è',
                description: `
üßÆ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏ –≤ C++ –∏ —É–∑–Ω–∞–µ—à—å –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –í C++ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã: \`+\`, \`-\`, \`*\`, \`/\`, \`%\`
- –°–∫–æ–±–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –∑–∞–¥–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–π
- –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä—è–≤–ª–µ–Ω—ã –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ \`a, b, c, d, e, f\` —Ç–∏–ø–∞ \`int\` –∏ –ø—Ä–∏—Å–≤–æ–π –∏–º –ª—é–±—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
2. –í—ã—á–∏—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è:
   \`\`\`
   (a + b * c) / d - e % f
   \`\`\`
3. –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üìå –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–∫—Ä–µ–ø–∏—Ç—å –ø–æ–Ω–∏–º–∞–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –∏ —Ä–∞–±–æ—Ç—ã —Å —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏.

üí¨ –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–†–µ–∑—É–ª—å—Ç–∞—Ç: 7
\`\`\`

üìà –ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è ‚Äî –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥—É—Ç —Ä—É–∫–∞ –æ–± —Ä—É–∫—É!
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ a, b, c, d, e, f
              // int a = ...;
              // int b = ...;
              // int c = ...;
              // int d = ...;
              // int e = ...;
              // int f = ...;
          
              // –í—ã—á–∏—Å–ª–∏—Ç–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ (a + b * c) / d - e % f
              // –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
              // std::cout << /* –≤–∞—à–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ */ << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int a = 10;
              int b = 2;
              int c = 3;
              int d = 4;
              int e = 5;
              int f = 2;
          
              int result = (a + b * c) / d - e % f;
              // (10 + 2*3) / 4 - 5 % 2 = (10 + 6) / 4 - 1 = 16 / 4 - 1 = 4 - 1 = 3
          
              std::cout << result << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^3$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 3'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              },
              {
                id: 'comparison-logic',
                title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —á—ë—Ç–Ω–æ—Å—Ç–∏ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ —Å –ø–æ–º–æ—â—å—é –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤',
                description: `
üîç –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –ß—ë—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é: \`n % 2 == 0\`
- –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞: \`n >= 10 && n <= 100\`
- –£—Å–ª–æ–≤–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä \`if\` –ø–æ–º–æ–≥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏ –≤—ã–≤–æ–¥–∏—Ç—å —Ä–∞–∑–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`int n\` –∏ –ø—Ä–∏—Å–≤–æ–π –µ–π –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
2. –ù–∞–ø–∏—à–∏ —É—Å–ª–æ–≤–∏–µ:
   - –ï—Å–ª–∏ \`n\` —á—ë—Ç–Ω–æ–µ **–∏** –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [10; 100], –≤—ã–≤–µ–¥–∏: \`"YES"\`
   - –ò–Ω–∞—á–µ ‚Äî –≤—ã–≤–µ–¥–∏: \`"NO"\`

---

üìå –≠—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Å–≤–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –ª–æ–≥–∏–∫–æ–π –≤ C++.

üí¨ –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
YES
\`\`\`

üß† –£–º–µ–Ω–∏–µ —Ç–æ—á–Ω–æ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏—è ‚Äî –∫–ª—é—á –∫ –Ω–∞–ø–∏—Å–∞–Ω–∏—é –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –∫–æ–¥–∞!
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π n
              // int n = ...;
          
              // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: –µ—Å–ª–∏ n —á—ë—Ç–Ω–æ–µ –∏ 10 <= n <= 100,
              // –≤—ã–≤–µ–¥–∏—Ç–µ "YES", –∏–Ω–∞—á–µ ‚Äî "NO".
              // std::cout << /* —É—Å–ª–æ–≤–∏–µ ? "YES" : "NO" */ << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int n = 24; // –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
          
              if (n % 2 == 0 && n >= 10 && n <= 100) {
                  std::cout << "YES" << std::endl;
              } else {
                  std::cout << "NO" << std::endl;
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^YES$',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å "YES" –¥–ª—è n=24'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'bitwise-demo',
                title: '–ü–æ–±–∏—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –∏—Ö –≤—ã–≤–æ–¥ –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ',
                description: `
üí° –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å **–ø–æ–±–∏—Ç–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏** –≤ C++ –∏ –Ω–∞—É—á–∏—à—å—Å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å —á–∏—Å–ª–∞ –≤ **–¥–≤–æ–∏—á–Ω–æ–π —Ñ–æ—Ä–º–µ**.

---

### üß† –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`&\` ‚Äî –ø–æ–±–∏—Ç–æ–≤–æ–µ –ò (AND)
- \`|\` ‚Äî –ø–æ–±–∏—Ç–æ–≤–æ–µ –ò–õ–ò (OR)
- \`^\` ‚Äî –ø–æ–±–∏—Ç–æ–≤–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò (XOR)
- –î–ª—è –≤—ã–≤–æ–¥–∞ —á–∏—Å–ª–∞ –≤ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å \`std::bitset\` –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ \`<bitset>\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ \`int x\` –∏ \`int y\`, –ø—Ä–∏—Å–≤–æ–π –∏–º –ª—é–±—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
2. –í—ã–≤–µ–¥–∏:
   - \`x & y\` –≤ **–¥–µ—Å—è—Ç–∏—á–Ω–æ–π** —Ñ–æ—Ä–º–µ
   - \`x | y\` –≤ **–¥–µ—Å—è—Ç–∏—á–Ω–æ–π** —Ñ–æ—Ä–º–µ
   - \`x ^ y\` –≤ **–¥–µ—Å—è—Ç–∏—á–Ω–æ–π** —Ñ–æ—Ä–º–µ
3. –ü–æ–≤—Ç–æ—Ä–∏ —Ç–µ –∂–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–æ –≤—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ **–¥–≤–æ–∏—á–Ω–æ–π** —Ñ–æ—Ä–º–µ:
   - –ò—Å–ø–æ–ª—å–∑—É–π: \`std::bitset<8>(x & y)\` –∏ —Ç.–ø.

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
x & y = 4 -> 00000100
x | y = 13 -> 00001101
x ^ y = 9 -> 00001001
\`\`\`

üîç –ü–æ–±–∏—Ç–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚Äî —ç—Ç–æ –≤–∞–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏!

üí™ –ü—Ä–æ–∫–∞—á–∞–π –Ω–∞–≤—ã–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏—Ç–∞–º–∏!
`,
                starterCode: `#include <iostream>
          #include <bitset>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ x –∏ y
              // int x = ...;
              // int y = ...;
          
              // –í—ã—á–∏—Å–ª–∏—Ç–µ x & y, x | y, x ^ y –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –∏—Ö –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–º –∏ –¥–≤–æ–∏—á–Ω–æ–º –≤–∏–¥–µ.
              // –ù–∞–ø—Ä–∏–º–µ—Ä:
              // std::cout << (x & y) << " " << std::bitset<8>(x & y) << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          #include <bitset>
          
          int main() {
              int x = 5;   // 00000101
              int y = 3;   // 00000011
          
              int andRes = x & y;  // 00000001 = 1
              int orRes  = x | y;  // 00000111 = 7
              int xorRes = x ^ y;  // 00000110 = 6
          
              std::cout << "x & y = " << andRes << " ("
                        << std::bitset<8>(andRes) << ")" << std::endl;
              std::cout << "x | y = " << orRes << " ("
                        << std::bitset<8>(orRes) << ")" << std::endl;
              std::cout << "x ^ y = " << xorRes << " ("
                        << std::bitset<8>(xorRes) << ")" << std::endl;
          
              return 0;
          }`,
                testCases: [
                  {
                    regex: 'x & y = 1 \\(00000001\\)',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å: x & y = 1 (00000001)'
                  },
                  {
                    regex: 'x \\| y = 7 \\(00000111\\)',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å: x | y = 7 (00000111)'
                  },
                  {
                    regex: 'x \\^ y = 6 \\(00000110\\)',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å: x ^ y = 6 (00000110)'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'control-flow',
            name: '[ 4 ] –£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –≤–µ—Ç–≤–ª–µ–Ω–∏–µ',
            tasks: [
              {
                id: 'max-of-three',
                title: '–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –∏–∑ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª',
                description: `
üî¢ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –Ω–∞—Ö–æ–¥–∏—Ç—å **–Ω–∞–∏–±–æ–ª—å—à–µ–µ –∏–∑ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª** —Å –ø–æ–º–æ—â—å—é –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π –≤ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –£—Å–ª–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã \`if / else\` –ø–æ–∑–≤–æ–ª—è—é—Ç —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –∏ –≤—ã–±–∏—Ä–∞—Ç—å, –∫–∞–∫–æ–π –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è—Ç—å
- –í–ª–æ–∂–µ–Ω–Ω—ã–µ \`if\` –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ—ç—Ç–∞–ø–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: \`int a, b, c;\` –∏ –ø—Ä–∏—Å–≤–æ–π –∏–º –ª—é–±—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
2. –ò—Å–ø–æ–ª—å–∑—É–π –≤–ª–æ–∂–µ–Ω–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ \`if / else\`, —á—Ç–æ–±—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ
3. –í—ã–≤–µ–¥–∏ —ç—Ç–æ —á–∏—Å–ª–æ –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 17
\`\`\`

üß† –¢–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ —É—á–∞—Ç –ª–æ–≥–∏—á–µ—Å–∫–∏ –º—ã—Å–ª–∏—Ç—å –∏ —Å—Ç—Ä–æ–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è.

–ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–≤–Ω—é ‚Äî –≤–ø–µ—Ä–µ–¥! üöÄ
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ç—Ä–∏ —á–∏—Å–ª–∞:
              // int a = ...;
              // int b = ...;
              // int c = ...;
          
              // –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –º–∞–∫—Å–∏–º—É–º –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ:
              // std::cout << /* –≤–∞—à –∫–æ–¥ */ << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int a = 5;
              int b = 3;
              int c = 9;
          
              int max = a;
              if (b > max) {
                  max = b;
              }
              if (c > max) {
                  max = c;
              }
          
              std::cout << max << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^9$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: 9'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'range-check',
                title: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ø–∞–¥–∞–Ω–∏—è —á–∏—Å–ª–∞ –≤ –¥–≤–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞',
                description: `
üß™ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –ò–õ–ò** (\`||\`) –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ø–∞–¥–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —É—Å–ª–æ–≤–∏–µ: \`n >= a && n <= b\`
- –û–ø–µ—Ä–∞—Ç–æ—Ä \`||\` –æ–∑–Ω–∞—á–∞–µ—Ç "–ò–õ–ò" ‚Äî —É—Å–ª–æ–≤–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑ –ø–æ–¥—É—Å–ª–æ–≤–∏–π –∏—Å—Ç–∏–Ω–Ω–æ
- \`if / else\` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ª–æ–≥–∏–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ—Ä–∫–∏

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`int n\` –∏ –∑–∞–¥–∞–π –µ–π –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
2. –ü—Ä–æ–≤–µ—Ä—å, –ø–æ–ø–∞–¥–∞–µ—Ç –ª–∏ \`n\` –≤ –æ–¥–∏–Ω –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤:
   - \`[10, 20]\`
   - –∏–ª–∏ \`[30, 40]\`
3. –ï—Å–ª–∏ –¥–∞ ‚Äî –≤—ã–≤–µ–¥–∏: \`"YES"\`, –∏–Ω–∞—á–µ ‚Äî \`"NO"\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
YES
\`\`\`

üîç –≠—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–Ω—è—Ç—å, –∫–∞–∫ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å —É—Å–ª–æ–≤–∏—è –≤ C++.

–õ–æ–≥–∏–∫–∞ ‚Äî —Ç–≤–æ–π –Ω–∞–¥—ë–∂–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç! üîß
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π n:
              // int n = ...;
          
              // –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å–ª–æ–≤–∏–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ "YES" –∏–ª–∏ "NO":
              // std::cout << /* –≤–∞—à –∫–æ–¥ */ << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int n = 25;
          
              if ((n >= 10 && n <= 20) || (n >= 30 && n <= 40)) {
                  std::cout << "YES" << std::endl;
              } else {
                  std::cout << "NO" << std::endl;
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^NO$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: NO'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'day-of-week-switch',
                title: '–ü–µ—Ä–µ–≤–æ–¥ –Ω–æ–º–µ—Ä–∞ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ –≤ —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ switch',
                description: `
üìÜ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä \`switch\` –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –û–ø–µ—Ä–∞—Ç–æ—Ä \`switch\` –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –±–ª–æ–∫ \`case\`
- –ö–∞–∂–¥—ã–π \`case\` –¥–æ–ª–∂–µ–Ω –∑–∞–∫–∞–Ω—á–∏–≤–∞—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º \`break\`, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å "–ø—Ä–æ–≤–∞–ª–∏–≤–∞–Ω–∏—è" –≤ —Å–ª–µ–¥—É—é—â–∏–π –±–ª–æ–∫
- –•–æ—Ä–æ—à–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –¥–æ–±–∞–≤–ª—è—Ç—å \`default\` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`int d\` –∏ –ø—Ä–∏—Å–≤–æ–π –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 1 –¥–æ 7
2. –ò—Å–ø–æ–ª—å–∑—É–π –æ–ø–µ—Ä–∞—Ç–æ—Ä \`switch(d)\`, —á—Ç–æ–±—ã:
   - 1 ‚Üí "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"
   - 2 ‚Üí "–í—Ç–æ—Ä–Ω–∏–∫"
   - 3 ‚Üí "–°—Ä–µ–¥–∞"
   - 4 ‚Üí "–ß–µ—Ç–≤–µ—Ä–≥"
   - 5 ‚Üí "–ü—è—Ç–Ω–∏—Ü–∞"
   - 6 ‚Üí "–°—É–±–±–æ—Ç–∞"
   - 7 ‚Üí "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"
3. –í—ã–≤–µ–¥–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–Ω—è –Ω–µ–¥–µ–ª–∏

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–°–µ–≥–æ–¥–Ω—è: –°—Ä–µ–¥–∞
\`\`\`

üß† –¢–∞–∫–æ–π –ø–æ–¥—Ö–æ–¥ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –º–µ–Ω—é, –∫–∞–ª–µ–Ω–¥–∞—Ä—è—Ö –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö –≤—ã–±–æ—Ä–∞.

–ü—Ä–æ–∫–∞—á–∞–π –Ω–∞–≤—ã–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è! üîÑ
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –ø—Ä–∏—Å–≤–æ–π—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π d (1‚Äì7):
              // int d = ...;
          
              // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ switch –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏ –≤—ã–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–Ω—è:
              /*
              switch (d) {
                  case 1:
                      std::cout << "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" << std::endl;
                      break;
                  // ...
                  default:
                      std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä" << std::endl;
              }
              */
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int d = 4;
          
              switch (d) {
                  case 1:
                      std::cout << "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫" << std::endl;
                      break;
                  case 2:
                      std::cout << "–í—Ç–æ—Ä–Ω–∏–∫" << std::endl;
                      break;
                  case 3:
                      std::cout << "–°—Ä–µ–¥–∞" << std::endl;
                      break;
                  case 4:
                      std::cout << "–ß–µ—Ç–≤–µ—Ä–≥" << std::endl;
                      break;
                  case 5:
                      std::cout << "–ü—è—Ç–Ω–∏—Ü–∞" << std::endl;
                      break;
                  case 6:
                      std::cout << "–°—É–±–±–æ—Ç–∞" << std::endl;
                      break;
                  case 7:
                      std::cout << "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ" << std::endl;
                      break;
                  default:
                      std::cout << "–ù–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä" << std::endl;
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^–ß–µ—Ç–≤–µ—Ä–≥$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: –ß–µ—Ç–≤–µ—Ä–≥'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              }
            ]
          },
          {
            topicId: 'loops-and-iteration',
            name: '[ 5 ] –¶–∏–∫–ª—ã –∏ –∏—Ç–µ—Ä–∞—Ü–∏–∏',
            tasks: [
              {
                id: 'multiplication-table',
                title: '–¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ç 1 –¥–æ 10',
                description: `
‚úñÔ∏è –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —Å–æ–∑–¥–∞—à—å **—Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è** —Å –ø–æ–º–æ—â—å—é –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ \`for\` –≤ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –¶–∏–∫–ª \`for\` –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å –±–ª–æ–∫ –∫–æ–¥–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ —Ä–∞–∑
- –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å –ø–∞—Ä—ã –∑–Ω–∞—á–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã)
- –í—ã–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ \`std::cout\` —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ –ø–æ–º–æ–∂–µ—Ç –∫—Ä–∞—Å–∏–≤–æ –æ—Ñ–æ—Ä–º–∏—Ç—å —Ç–∞–±–ª–∏—Ü—É

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –ò—Å–ø–æ–ª—å–∑—É–π –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª \`for (int i = 1; i <= 10; i++)\` ‚Äî –¥–ª—è —Å—Ç—Ä–æ–∫
2. –í–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ —Å–æ–∑–¥–∞–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª \`for (int j = 1; j <= 10; j++)\` ‚Äî –¥–ª—è —Å—Ç–æ–ª–±—Ü–æ–≤
3. –í –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ü–∏–∫–ª–∞ –≤—ã–≤–æ–¥–∏: \`i * j\`, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª
4. –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞):
\`\`\`
1 2 3 4 5 6 7 8 9 10
\`\`\`

üìà –≠—Ç–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ —É–∫—Ä–µ–ø–∏—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ —Ü–∏–∫–ª–æ–≤ –∏ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–∞–±–ª–∏—á–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏.

–£–º–Ω–æ–∂–∞–π —É–≤–µ—Ä–µ–Ω–Ω–æ! üí™
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª for, —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—É —É–º–Ω–æ–∂–µ–Ω–∏—è –æ—Ç 1 –¥–æ 10.
              // –ù–∞–ø—Ä–∏–º–µ—Ä:
              // for (int i = 1; i <= 10; ++i) {
              //     for (int j = 1; j <= 10; ++j) {
              //         std::cout << i * j << " ";
              //     }
              //     std::cout << std::endl;
              // }
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              for (int i = 1; i <= 10; ++i) {
                  for (int j = 1; j <= 10; ++j) {
                      std::cout << i * j << " ";
                  }
                  std::cout << std::endl;
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^1 2 3 4 5 6 7 8 9 10$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å: 1 2 3 4 5 6 7 8 9 10'
                  },
                  {
                    regex: '^10 20 30 40 50 60 70 80 90 100$',
                    message: '–î–µ—Å—è—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å: 10 20 30 40 50 60 70 80 90 100'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'guess-number',
                title: '–ò–≥—Ä–∞ ¬´–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ¬ª',
                description: `
üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–∏–≥—Ä—É "–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ"! –ó–¥–µ—Å—å —Ç—ã –ø—Ä–∏–º–µ–Ω–∏—à—å –≤—Å—ë, —á—Ç–æ –∑–Ω–∞–µ—à—å –æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, —Ü–∏–∫–ª–∞—Ö –∏ –≤–≤–æ–¥–µ/–≤—ã–≤–æ–¥–µ.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`std::rand()\` –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞
- \`std::srand(time(0))\` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª (–Ω–µ –∑–∞–±—É–¥—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å \`<cstdlib>\` –∏ \`<ctime>\`)
- \`while\`-—Ü–∏–∫–ª –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å –ø–æ–ø—ã—Ç–∫–∏ –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ —á–∏—Å–ª–æ –Ω–µ –±—É–¥–µ—Ç —É–≥–∞–¥–∞–Ω–æ

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –ó–∞–≥–∞–¥–∞–π —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: \`int n = std::rand() % 100 + 1;\`
2. –ó–∞–ø—É—Å—Ç–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª \`while\`, –≤ –∫–æ—Ç–æ—Ä–æ–º:
   - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á–∏—Å–ª–æ
   - –ï—Å–ª–∏ –æ–Ω–æ **–º–µ–Ω—å—à–µ** –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ ‚Äî –≤—ã–≤–µ–¥–∏: \`"–ë–æ–ª—å—à–µ"\`
   - –ï—Å–ª–∏ **–±–æ–ª—å—à–µ** ‚Äî –≤—ã–≤–µ–¥–∏: \`"–ú–µ–Ω—å—à–µ"\`
   - –ï—Å–ª–∏ **—É–≥–∞–¥–∞–ª** ‚Äî –≤—ã–≤–µ–¥–∏: \`"–£–≥–∞–¥–∞–Ω–æ!"\` –∏ –≤—ã–π–¥–∏ –∏–∑ —Ü–∏–∫–ª–∞

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 45
–ë–æ–ª—å—à–µ
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 70
–ú–µ–Ω—å—à–µ
–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: 60
–£–≥–∞–¥–∞–Ω–æ!
\`\`\`

üïπÔ∏è –≠—Ç–æ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö ‚Äî –æ—Ç–ª–∏—á–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –ª–æ–≥–∏–∫–∏ –∏ —Ü–∏–∫–ª–æ–≤!
`,
                starterCode: `#include <iostream>
          #include <cstdlib>
          #include <ctime>
          
          int main() {
              std::srand(static_cast<unsigned>(std::time(nullptr)));
              int n = std::rand() % 100 + 1; // –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
              int guess;
          
              // –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ü–∏–∫–ª while –¥–ª—è —á—Ç–µ–Ω–∏—è –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å n.
              // –í–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞:
              // std::cin >> guess;
              // if (guess < n) std::cout << "–ë–æ–ª—å—à–µ" << std::endl;
              // else if (guess > n) std::cout << "–ú–µ–Ω—å—à–µ" << std::endl;
              // else { std::cout << "–£–≥–∞–¥–∞–Ω–æ!" << std::endl; break; }
          
              return 0;
          }`,
                solution: `#include <iostream>
          #include <cstdlib>
          #include <ctime>
          
          int main() {
              std::srand(static_cast<unsigned>(std::time(nullptr)));
              int n = std::rand() % 100 + 1; // –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
              int guess;
          
              while (true) {
                  std::cout << "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (1-100): ";
                  std::cin >> guess;
                  if (guess < n) {
                      std::cout << "–ë–æ–ª—å—à–µ" << std::endl;
                  } else if (guess > n) {
                      std::cout << "–ú–µ–Ω—å—à–µ" << std::endl;
                  } else {
                      std::cout << "–£–≥–∞–¥–∞–Ω–æ!" << std::endl;
                      break;
                  }
              }
              return 0;
          }`,
                testCases: [], // –ò–≥—Ä–∞ —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–≤–æ–¥–∞, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–∏–º–µ–Ω–∏–º—ã
                xp: 15,
                difficulty: 'Medium'
              },
              {
                id: 'odd-break-continue',
                title: '–í—ã–≤–æ–¥ –Ω–µ—á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª —Å break –∏ continue',
                description: `
üîÅ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Ç–æ–∫–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–∏–∫–ª–∞ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ \`continue\` –∏ \`break\`.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`for (int i = 1; i <= 50; i++)\` ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ü–∏–∫–ª –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞ —á–∏—Å–µ–ª
- \`continue\` –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π
- \`break\` –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ü–∏–∫–ª–∞
- \`i % 2 == 0\` ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª \`for\`, —á—Ç–æ–±—ã –ø–µ—Ä–µ–±—Ä–∞—Ç—å —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 50
2. –ï—Å–ª–∏ —á–∏—Å–ª–æ **—á—ë—Ç–Ω–æ–µ**, –ø—Ä–æ–ø—É—Å—Ç–∏ –µ–≥–æ —Å –ø–æ–º–æ—â—å—é \`continue\`
3. –ï—Å–ª–∏ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ **37**, –ø—Ä–µ—Ä–≤–∏ —Ü–∏–∫–ª —Å –ø–æ–º–æ—â—å—é \`break\`
4. –í—ã–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ –Ω–µ—á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –¥–æ 37 (–Ω–µ –≤–∫–ª—é—á–∞—è —Å–∞–º–æ 37)

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
1
3
5
...
35
\`\`\`

üß† –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç, –∫–∞–∫ –≥–∏–±–∫–æ –º–æ–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ü–∏–∫–ª–æ–º —Å –ø–æ–º–æ—â—å—é —É—Å–ª–æ–≤–∏–π.

–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–π —Å —É–º–æ–º ‚Äî —É–ø—Ä–∞–≤–ª—è–π –ø–æ—Ç–æ–∫–æ–º! üîÑüõë
`,
                starterCode: `#include <iostream>
          
          int main() {
              for (int i = 1; i <= 50; ++i) {
                  // –ï—Å–ª–∏ i —á—ë—Ç–Ω–æ–µ, –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é:
                  // if (i % 2 == 0) continue;
          
                  // –ï—Å–ª–∏ i == 37, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ü–∏–∫–ª:
                  // if (i == 37) break;
          
                  // –í—ã–≤–µ–¥–∏—Ç–µ i:
                  // std::cout << i << " ";
              }
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              for (int i = 1; i <= 50; ++i) {
                  if (i % 2 == 0) continue;
                  if (i == 37) break;
                  std::cout << i << " ";
              }
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^1 3 5 7 9 11 13 15 17 19 21 23 25 27 29 31 33 35$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥ –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 35'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'functions',
            name: '[ 6 ] –§—É–Ω–∫—Ü–∏–∏ –∏ –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏',
            tasks: [
              {
                id: 'add-function',
                title: '–§—É–Ω–∫—Ü–∏—è add(int a, int b)',
                description: `
‚ûï –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —Å–æ–∑–¥–∞—à—å —Å–≤–æ—é –ø–µ—Ä–≤—É—é **—Ñ—É–Ω–∫—Ü–∏—é** –≤ C++, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ ‚Äî —Å–ª–æ–∂–µ–Ω–∏–µ.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–¥ –∏ –¥–µ–ª–∞—é—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –ø–æ–Ω—è—Ç–Ω–æ–π –∏ –º–æ–¥—É–ª—å–Ω–æ–π
- –í–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π —Ç–∏–ø —Ñ—É–Ω–∫—Ü–∏–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –µ—ë –∏–º–µ–Ω–µ–º: \`int add(...)\`
- –ê—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–Ω—É—Ç—Ä–∏ —Å–∫–æ–±–æ–∫

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é \`int add(int a, int b)\`, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É \`a + b\`
2. –í–Ω—É—Ç—Ä–∏ \`main()\` –≤—ã–∑–æ–≤–∏ —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 3 –∏ 4)
3. –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–°—É–º–º–∞: 7
\`\`\`

üß† –§—É–Ω–∫—Ü–∏–∏ ‚Äî –æ—Å–Ω–æ–≤–∞ —Ö–æ—Ä–æ—à–µ–≥–æ –∫–æ–¥–∞. –ß–µ–º —Ä–∞–Ω—å—à–µ –Ω–∞—á–Ω—ë—à—å –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, —Ç–µ–º –ª—É—á—à–µ —Ç–≤–æ–π —Å—Ç–∏–ª—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ ‚Äî –∑–∞–ª–æ–≥ —É—Å–ø–µ—Ö–∞! üîß‚ú®
`,
                starterCode: `#include <iostream>
          
          // –û–±—ä—è–≤–∏—Ç–µ –∑–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—é add
          
          int main() {
              // –í—ã–∑–æ–≤–∏—Ç–µ add(3, 4) –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              // std::cout << add(3, 4) << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          
          int add(int a, int b) {
              return a + b;
          }
          
          int main() {
              std::cout << add(3, 4) << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^7$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: 7'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'swap-by-reference',
                title: '–§—É–Ω–∫—Ü–∏—è swapValues(int &x, int &y)',
                description: `
üîÑ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å **—Å—Å—ã–ª–∫–∏** –≤ C++ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä—è–º–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –í C++ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã **–ø–æ —Å—Å—ã–ª–∫–µ** —Å –ø–æ–º–æ—â—å—é —Å–∏–º–≤–æ–ª–∞ \`&\`
- –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –≤—ã–∑—ã–≤–∞—é—â–µ–º –∫–æ–¥–µ
- –¢–∏–ø–∏—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–º–µ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏: \`void swapValues(int &x, int &y)\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é: \`void swapValues(int &x, int &y)\`
   - –í–Ω—É—Ç—Ä–∏ –Ω–µ—ë –ø–æ–º–µ–Ω—è–π –∑–Ω–∞—á–µ–Ω–∏—è \`x\` –∏ \`y\` –º–µ—Å—Ç–∞–º–∏ (—á–µ—Ä–µ–∑ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é)
2. –í \`main()\`:
   - –û–±—ä—è–≤–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: \`a = 5\`, \`b = 10\`
   - –í—ã–∑–æ–≤–∏ \`swapValues(a, b)\`
   - –í—ã–≤–µ–¥–∏ –∑–Ω–∞—á–µ–Ω–∏—è \`a\` –∏ \`b\` –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞ –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
10
5
\`\`\`

üß† –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ —Å—Å—ã–ª–∫–µ ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ø–∞–º—è—Ç—å—é –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏!

–û—Å–≤–æ–π —ç—Ç–æ—Ç –Ω–∞–≤—ã–∫ –∏ —É–ª—É—á—à–∞–π —Å–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏! üîßüìò
`,
                starterCode: `#include <iostream>
          
          // –û–±—ä—è–≤–∏—Ç–µ –∑–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—é swapValues
          
          int main() {
              int a = 5;
              int b = 10;
              // –í—ã–∑–æ–≤–∏—Ç–µ swapValues(a, b);
              // –í—ã–≤–µ–¥–∏—Ç–µ a –∏ b:
              // std::cout << a << std::endl;
              // std::cout << b << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          
          void swapValues(int &x, int &y) {
              int temp = x;
              x = y;
              y = temp;
          }
          
          int main() {
              int a = 5;
              int b = 10;
              swapValues(a, b);
              std::cout << a << std::endl;
              std::cout << b << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^10$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 10'
                  },
                  {
                    regex: '^5$',
                    message: '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 5'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'recursive-factorial',
                title: '–†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è factorial(int n)',
                description: `
üîÅ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —Ä–µ–∞–ª–∏–∑—É–µ—à—å —Å–≤–æ—é –ø–µ—Ä–≤—É—é **—Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é** ‚Äî –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞ —á–∏—Å–ª–∞.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- **–§–∞–∫—Ç–æ—Ä–∏–∞–ª** —á–∏—Å–ª–∞ \`n\` ‚Äî —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ \`n\`:  
  \`n! = n √ó (n - 1) √ó (n - 2) √ó ... √ó 1\`
- –†–µ–∫—É—Ä—Å–∏—è ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç —Å–∞–º–∞ —Å–µ–±—è
- –ë–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ä–µ–∫—É—Ä—Å–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, \`n == 0\`)

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Ñ—É–Ω–∫—Ü–∏—é: \`int factorial(int n)\`
   - –ï—Å–ª–∏ \`n == 0\`, –≤–µ—Ä–Ω–∏ 1
   - –ò–Ω–∞—á–µ –≤–µ—Ä–Ω–∏: \`n * factorial(n - 1)\`
2. –í \`main()\` –≤—ã–∑–æ–≤–∏: \`factorial(5)\`
3. –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
120
\`\`\`

üß† –†–µ–∫—É—Ä—Å–∏—è ‚Äî –º–æ—â–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –∞–∫–∫—É—Ä–∞—Ç–Ω–æ—Å—Ç–∏. –°–Ω–∞—á–∞–ª–∞ ‚Äî –±–∞–∑–æ–≤—ã–π —Å–ª—É—á–∞–π, –ø–æ—Ç–æ–º ‚Äî —à–∞–≥ —Ä–µ–∫—É—Ä—Å–∏–∏!

–†–∞–∑–º—ã—à–ª—è–π –∫–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç ‚Äî —Å—Ç—Ä–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –º–∞—Ç—Ä—ë—à–∫–∏! üß†üì¶
`,
                starterCode: `#include <iostream>
          
          // –û–±—ä—è–≤–∏—Ç–µ –∑–¥–µ—Å—å —Ñ—É–Ω–∫—Ü–∏—é factorial
          
          int main() {
              // –í—ã–∑–æ–≤–∏—Ç–µ factorial(5) –∏ –≤—ã–≤–µ–¥–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              // std::cout << factorial(5) << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          
          int factorial(int n) {
              if (n <= 1) return 1;
              return n * factorial(n - 1);
          }
          
          int main() {
              std::cout << factorial(5) << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^120$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: 120'
                  }
                ],
                xp: 15,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'arrays-strings-pointers',
            name: '[ 7 ] –ú–∞—Å—Å–∏–≤—ã, —Å—Ç—Ä–æ–∫–∏ –∏ —É–∫–∞–∑–∞—Ç–µ–ª–∏',
            tasks: [
              {
                id: 'array-max',
                title: '–ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º—É–º–∞ –≤ –º–∞—Å—Å–∏–≤–µ –∏–∑ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
                description: `
üìä –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å **–º–∞—Å—Å–∏–≤–∞–º–∏** –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å **–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç** —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–∞—Å—Å–∏–≤ –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è —Ç–∞–∫: \`int arr[10] = { ... };\`
- –ß—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–∞—Å—Å–∏–≤—É, –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ü–∏–∫–ª \`for\`
- –î–ª—è –ø–æ–∏—Å–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω—É–∂–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—É—â–∏–º –º–∞–∫—Å–∏–º—É–º–æ–º

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –º–∞—Å—Å–∏–≤ –∏–∑ 10 —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —Å–≤–æ–µ–º—É –≤—ã–±–æ—Ä—É
2. –°–æ–∑–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`max\`, –ø—Ä–∏—Å–≤–æ–π –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞
3. –° –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ \`for\` –ø—Ä–æ–π–¥–∏ –ø–æ –º–∞—Å—Å–∏–≤—É –∏ –æ–±–Ω–æ–≤–ª—è–π \`max\`, –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—à—å –±–æ–ª—å—à–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
4. –ü–æ—Å–ª–µ —Ü–∏–∫–ª–∞ –≤—ã–≤–µ–¥–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–π –º–∞–∫—Å–∏–º—É–º —Å –ø–æ–º–æ—â—å—é \`std::cout\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–ú–∞–∫—Å–∏–º—É–º: 98
\`\`\`

üîç –£–º–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –º–∞–∫—Å–∏–º—É–º ‚Äî –±–∞–∑–æ–≤—ã–π, –Ω–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –¥–∞–Ω–Ω—ã–º–∏!

–ü—Ä–æ–∫–∞—á–∞–π –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ! üìà
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –º–∞—Å—Å–∏–≤ –∏–∑ 10 —ç–ª–µ–º–µ–Ω—Ç–æ–≤:
              // int arr[10] = { ... };
          
              // –ù–∞–π–¥–∏—Ç–µ –º–∞–∫—Å–∏–º—É–º –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –µ–≥–æ:
              // int max = arr[0];
              // for (int i = 1; i < 10; ++i) {
              //     if (arr[i] > max) {
              //         max = arr[i];
              //     }
              // }
              // std::cout << max << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int arr[10] = {5, 12, 7, 3, 19, 8, 0, 14, 11, 6};
          
              int max = arr[0];
              for (int i = 1; i < 10; ++i) {
                  if (arr[i] > max) {
                      max = arr[i];
                  }
              }
              std::cout << max << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^19$',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º—É–º–∞: 19'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'cstring-concat',
                title: '–ö–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è –¥–≤—É—Ö C-—Å—Ç—Ä–æ–∫',
                description: `
üî§ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ—Ç—Ä–µ–Ω–∏—Ä—É–µ—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å **C-—Å—Ç—Ä–æ–∫–∞–º–∏** –∏ –≤—Ä—É—á–Ω—É—é —Ä–µ–∞–ª–∏–∑—É–µ—à—å **–∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é** —Å—Ç—Ä–æ–∫ –±–µ–∑ –ø–æ–º–æ—â–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- C-—Å—Ç—Ä–æ–∫–∏ ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤—ã —Å–∏–º–≤–æ–ª–æ–≤ —Å —Å–∏–º–≤–æ–ª–æ–º \`'\\0'\` (–Ω—É–ª–µ–≤–æ–π —Ç–µ—Ä–º–∏–Ω–∏—Ä—É—é—â–∏–π —Å–∏–º–≤–æ–ª) –≤ –∫–æ–Ω—Ü–µ
- –ß—Ç–æ–±—ã "–ø—Ä–∏—Ü–µ–ø–∏—Ç—å" –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –∫ –¥—Ä—É–≥–æ–π, –Ω—É–∂–Ω–æ:
  1. –ù–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ (–≥–¥–µ \`'\\0'\`)
  2. –ü–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É, –≤–∫–ª—é—á–∞—è \`'\\0'\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Å—Ç—Ä–æ–∫–∏:
   - \`char s1[50] = "Hello, "\`
   - \`char s2[50] = "World!"\`
2. –° –ø–æ–º–æ—â—å—é –∏–Ω–¥–µ–∫—Å–æ–≤ –∏–ª–∏ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–∞–π–¥–∏ –∫–æ–Ω–µ—Ü \`s1\` –∏ —Å–∫–æ–ø–∏—Ä—É–π —Å–∏–º–≤–æ–ª—ã –∏–∑ \`s2\`
3. –í—ã–≤–µ–¥–∏ –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ø–æ–º–æ—â—å—é \`std::cout << s1;\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
Hello, World!
\`\`\`

üß† –†–∞–±–æ—Ç–∞ —Å C-—Å—Ç—Ä–æ–∫–∞–º–∏ ‚Äî —ç—Ç–æ –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–Ω—è—Ç—å, –∫–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ –ø–∞–º—è—Ç—å –∏ —Å—Ç—Ä–æ–∫–∏ "–ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º".

–ü–æ–≥—Ä—É–∑–∏—Å—å –≤ –æ—Å–Ω–æ–≤—ã —è–∑—ã–∫–∞ C++! üîßüî°
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ C-—Å—Ç—Ä–æ–∫–∏:
              // char s1[50] = "Hello, ";
              // char s2[50] = "World!";
          
              // –ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏–∫–ª –¥–ª—è –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏–∏ s2 –≤ –∫–æ–Ω–µ—Ü s1:
              // int i = 0;
              // while (s1[i] != '\\0') ++i;
              // int j = 0;
              // while (s2[j] != '\\0') {
              //     s1[i++] = s2[j++];
              // }
              // s1[i] = '\\0';
          
              // –í—ã–≤–µ–¥–∏—Ç–µ s1:
              // std::cout << s1 << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              char s1[50] = "Hello, ";
              char s2[50] = "World!";
          
              int i = 0;
              while (s1[i] != '\\0') {
                  ++i;
              }
              int j = 0;
              while (s2[j] != '\\0') {
                  s1[i++] = s2[j++];
              }
              s1[i] = '\\0';
          
              std::cout << s1 << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^Hello, World!$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç: Hello, World!'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              },
              {
                id: 'pointer-arithmetic',
                title: '–†–∞–±–æ—Ç–∞ —Å —É–∫–∞–∑–∞—Ç–µ–ª–µ–º: –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ –Ω–µ–≥–æ',
                description: `
üìç –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –ø–æ–∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å **—É–∫–∞–∑–∞—Ç–µ–ª—è–º–∏** –≤ C++ –∏ —É–≤–∏–¥–∏—à—å, –∫–∞–∫ —á–µ—Ä–µ–∑ –Ω–∏—Ö –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`int *p = &x;\` ‚Äî —Å–æ–∑–¥–∞—ë—Ç —É–∫–∞–∑–∞—Ç–µ–ª—å –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`x\`
- \`*p\` ‚Äî —Ä–∞–∑—ã–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª—è, –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç
- –ò–∑–º–µ–Ω–µ–Ω–∏—è —á–µ—Ä–µ–∑ \`*p\` –≤–ª–∏—è—é—Ç –Ω–∞ —Å–∞–º—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \`x\`, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –æ–±–ª–∞—Å—Ç—å –ø–∞–º—è—Ç–∏

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏: \`int x = 10;\`
2. –°–æ–∑–¥–∞–π —É–∫–∞–∑–∞—Ç–µ–ª—å: \`int *p = &x;\`
3. –ò–∑–º–µ–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ \`x\` —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å: \`*p = 25;\`
4. –í—ã–≤–µ–¥–∏ —Ç—Ä–∏ –∑–Ω–∞—á–µ–Ω–∏—è:
   - –ò—Å—Ö–æ–¥–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ \`x\` –¥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è (–¥–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è)
   - –ó–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å \`*p\`
   - –ù–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ \`x\` –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–ò—Å—Ö–æ–¥–Ω–æ–µ x: 10
–ß–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å: 25
–ù–æ–≤–æ–µ x: 25
\`\`\`

üß† –ü–æ–Ω–∏–º–∞–Ω–∏–µ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π ‚Äî –∫–ª—é—á –∫ –≥–ª—É–±–∏–Ω–Ω–æ–º—É –∑–Ω–∞–Ω–∏—é C –∏ C++. –£–ø—Ä–∞–≤–ª—è–π –ø–∞–º—è—Ç—å—é –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ! üîçüì¶
`,
                starterCode: `#include <iostream>
          
          int main() {
              // –û–±—ä—è–≤–∏—Ç–µ x –∏ —É–∫–∞–∑–∞—Ç–µ–ª—å p:
              // int x = 10;
              // int *p = &x;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ x:
              // std::cout << x << std::endl;
          
              // –ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å:
              // *p = 25;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å:
              // std::cout << *p << std::endl;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ x —Å–Ω–æ–≤–∞:
              // std::cout << x << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          
          int main() {
              int x = 10;
              int *p = &x;
          
              std::cout << x << std::endl;    // 10
              *p = 25;
              std::cout << *p << std::endl;   // 25
              std::cout << x << std::endl;    // 25
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^10$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 10'
                  },
                  {
                    regex: '^25$',
                    message: '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 25 (—á–µ—Ä–µ–∑ —É–∫–∞–∑–∞—Ç–µ–ª—å)'
                  },
                  {
                    regex: '^25$',
                    message: '–¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 25 (–∑–Ω–∞—á–µ–Ω–∏–µ x –∏–∑–º–µ–Ω–µ–Ω–æ)'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'structs-and-enums',
            name: '[ 8 ] –°—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è',
            tasks: [
              {
                id: 'person-struct',
                title: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ struct Person –∏ –≤—ã–≤–æ–¥ –ø–æ–ª–µ–π',
                description: `
üß± –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —É–∑–Ω–∞–µ—à—å, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ **—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (struct)** –≤ C++, —á—Ç–æ–±—ã –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω–æ–º –æ–±—ä–µ–∫—Ç–µ.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`struct\` –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –≤ –æ–¥–Ω—É —Å—É—â–Ω–æ—Å—Ç—å
- –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ–ª—è–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–æ—á–∫—É: \`p.name\`, \`p.age\`
- –°—Ç—Ä—É–∫—Ç—É—Ä—ã —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π, –∫–∞–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ–ª–æ–≤–µ–∫ (\`Person\`)

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É \`Person\` —Å –ø–æ–ª—è–º–∏:
   - \`std::string name;\`
   - \`int age;\`
2. –í \`main()\` —Å–æ–∑–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: \`Person p;\`
3. –ü—Ä–∏—Å–≤–æ–π –µ–π –∏–º—è "Alice" –∏ –≤–æ–∑—Ä–∞—Å—Ç 30
4. –í—ã–≤–µ–¥–∏ –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç –≤ –∫–æ–Ω—Å–æ–ª—å, –∫–∞–∂–¥–æ–µ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
Alice
30
\`\`\`

üë§ –°—Ç—Ä—É–∫—Ç—É—Ä—ã ‚Äî —ç—Ç–æ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç –æ–±—ä–µ–∫—Ç–Ω–æ-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. –ù–∞—á–Ω–∏ —Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π "–æ–±—ä–µ–∫—Ç" —É–∂–µ —Å–µ–π—á–∞—Å!
`,
                starterCode: `#include <iostream>
          #include <string>
          
          struct Person {
              // –û–±—ä—è–≤–∏—Ç–µ –ø–æ–ª—è: name –∏ age
          };
          
          int main() {
              // –°–æ–∑–¥–∞–π—Ç–µ Person p = {"Alice", 30};
              // –í—ã–≤–µ–¥–∏—Ç–µ p.name –∏ p.age:
              // std::cout << p.name << std::endl;
              // std::cout << p.age << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          #include <string>
          
          struct Person {
              std::string name;
              int age;
          };
          
          int main() {
              Person p = {"Alice", 30};
              std::cout << p.name << std::endl;
              std::cout << p.age << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^Alice$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "Alice"'
                  },
                  {
                    regex: '^30$',
                    message: '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "30"'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'struct-array',
                title: '–ú–∞—Å—Å–∏–≤ struct Person –∏ –ø–æ–∏—Å–∫ —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ',
                description: `
üßç‚Äç‚ôÇÔ∏èüßç‚Äç‚ôÄÔ∏è –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ **—Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –∏ –º–∞—Å—Å–∏–≤–∞–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä** –≤ C++, –∞ —Ç–∞–∫–∂–µ –∏—Å–∫–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º—É –ø–æ–ª—é.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`struct\` –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç)
- –ú–∞—Å—Å–∏–≤ —Å—Ç—Ä—É–∫—Ç—É—Ä –º–æ–∂–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç—å —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞
- –î–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –Ω—É–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∏—Ö –ø–æ–ª—è–º: \`arr[i].age\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
   \`struct Person { std::string name; int age; };\`
2. –°–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤:
   \`Person arr[3] = { {"Bob", 25}, {"Carol", 32}, {"Dave", 28} };\`
3. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (—É –∫–æ–≥–æ –Ω–∞–∏–±–æ–ª—å—à–∏–π \`age\`)
4. –í—ã–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–æ–ª—å–∫–æ –µ–≥–æ \`name\`

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
Carol
\`\`\`

üîé –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç–ª–∏—á–Ω–æ —Ç—Ä–µ–Ω–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –º–∞—Å—Å–∏–≤–∞–º–∏, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ–º –æ–±—ä–µ–∫—Ç–æ–≤.

–ò—â–∏ –ª—É—á—à–∏—Ö ‚Äî —Å –ø–æ–º–æ—â—å—é –∫–æ–¥–∞! üöÄ
`,
                starterCode: `#include <iostream>
          #include <string>
          
          struct Person {
              // –ü–æ–ª—è: name –∏ age
          };
          
          int main() {
              // –°–æ–∑–¥–∞–π—Ç–µ –º–∞—Å—Å–∏–≤ Person arr[3] = { {"Bob", 25}, {"Carol", 32}, {"Dave", 28} };
              // –ù–∞–π–¥–∏—Ç–µ –∏–Ω–¥–µ–∫—Å —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ:
              // int idxMax = 0;
              // for (int i = 1; i < 3; ++i) {
              //     if (arr[i].age > arr[idxMax].age) {
              //         idxMax = i;
              //     }
              // }
              // –í—ã–≤–µ–¥–∏—Ç–µ arr[idxMax].name:
              // std::cout << arr[idxMax].name << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          #include <string>
          
          struct Person {
              std::string name;
              int age;
          };
          
          int main() {
              Person arr[3] = { {"Bob", 25}, {"Carol", 32}, {"Dave", 28} };
              int idxMax = 0;
              for (int i = 1; i < 3; ++i) {
                  if (arr[i].age > arr[idxMax].age) {
                      idxMax = i;
                  }
              }
              std::cout << arr[idxMax].name << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^Carol$',
                    message: '–û–∂–∏–¥–∞–ª–æ—Å—å –∏–º—è —Å–∞–º–æ–≥–æ —Å—Ç–∞—Ä—à–µ–≥–æ: Carol'
                  }
                ],
                xp: 15,
                difficulty: 'Medium'
              },
              {
                id: 'enum-class-color',
                title: 'enum class Color –∏ —Ñ—É–Ω–∫—Ü–∏—è-–ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Ü–≤–µ—Ç–∞',
                description: `
üé® –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã —Å–æ–∑–¥–∞—à—å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ (**enum class**) –∏ –Ω–∞—É—á–∏—à—å—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤ —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`enum class\` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–π —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é —Ç–∏–ø–æ–≤
- –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —É–¥–æ–±–Ω–æ "–ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å" –∑–Ω–∞—á–µ–Ω–∏—è enum'–∞ –≤ —á–µ–ª–æ–≤–µ–∫–æ—á–∏—Ç–∞–µ–º—ã–µ —Å—Ç—Ä–æ–∫–∏
- –û–ø–µ—Ä–∞—Ç–æ—Ä \`switch\` —Ö–æ—Ä–æ—à–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ:
   \`enum class Color { RED, GREEN, BLUE };\`
2. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é:
   \`std::string toString(Color c)\`
   - –î–ª—è \`Color::RED\` –≤–µ—Ä–Ω–∏ \`"–ö—Ä–∞—Å–Ω—ã–π"\`
   - –î–ª—è \`Color::GREEN\` –≤–µ—Ä–Ω–∏ \`"–ó–µ–ª—ë–Ω—ã–π"\`
   - –î–ª—è \`Color::BLUE\` –≤–µ—Ä–Ω–∏ \`"–°–∏–Ω–∏–π"\`
3. –í \`main()\` –≤—ã–∑–æ–≤–∏: \`toString(Color::GREEN)\`
4. –í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª—å

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
–ó–µ–ª—ë–Ω—ã–π
\`\`\`

üß† –≠—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –Ω–∞—É—á–∏—Ç —Ç–µ–±—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –≥–∏–±–∫–∏–µ –∏ —á–∏—Ç–∞–µ–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è–º–∏.

–¶–≤–µ—Ç –≤ –∫–æ–¥–µ ‚Äî –Ω–µ —Ç–æ–ª—å–∫–æ —Å—Ç–∏–ª—å, –Ω–æ –∏ –ª–æ–≥–∏–∫–∞! üåà
`,
                starterCode: `#include <iostream>
          #include <string>
          
          enum class Color {
              // –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ RED, GREEN, BLUE
          };
          
          std::string toString(Color c) {
              // –†–µ–∞–ª–∏–∑—É–π—Ç–µ switch –ø–æ c –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ —Å—Ç—Ä–æ–∫–∏
          }
          
          int main() {
              // –í—ã–≤–µ–¥–∏—Ç–µ toString(Color::GREEN):
              // std::cout << toString(Color::GREEN) << std::endl;
              return 0;
          }`,
                solution: `#include <iostream>
          #include <string>
          
          enum class Color {
              RED,
              GREEN,
              BLUE
          };
          
          std::string toString(Color c) {
              switch (c) {
                  case Color::RED:
                      return "–ö—Ä–∞—Å–Ω—ã–π";
                  case Color::GREEN:
                      return "–ó–µ–ª—ë–Ω—ã–π";
                  case Color::BLUE:
                      return "–°–∏–Ω–∏–π";
              }
              return "";
          }
          
          int main() {
              std::cout << toString(Color::GREEN) << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^–ó–µ–ª—ë–Ω—ã–π$',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: –ó–µ–ª—ë–Ω—ã–π'
                  }
                ],
                xp: 10,
                difficulty: 'Medium'
              }
            ]
          },
          {
            topicId: 'io-and-file-ops',
            name: '[ 9 ] –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –≤–≤–æ–¥-–≤—ã–≤–æ–¥ –∏ —Ñ–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏',
            tasks: [
              {
                id: 'formatted-io',
                title: '–í–≤–æ–¥ —Ç—Ä—ë—Ö —á–∏—Å–µ–ª –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ',
                description: `
üìã –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è –∫—Ä–∞—Å–∏–≤–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é \`std::setw\` –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ \`<iomanip>\`.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- \`std::setw(n)\` –∑–∞–¥–∞—ë—Ç —à–∏—Ä–∏–Ω—É –ø–æ–ª—è –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–≤–æ–¥–∞
- –ß—Ç–æ–±—ã \`std::setw\` —Ä–∞–±–æ—Ç–∞–ª, –Ω—É–∂–Ω–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫: \`#include <iomanip>\`
- –¢–∞–∫–æ–π –≤—ã–≤–æ–¥ –¥–µ–ª–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–∏–∑—É–∞–ª—å–Ω–æ –∞–∫–∫—É—Ä–∞—Ç–Ω—ã–º–∏ –∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –°—á–∏—Ç–∞–π —Ç—Ä–∏ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ \`a, b, c\` —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (–∏—Å–ø–æ–ª—å–∑—É–π \`std::cin\`)
2. –í—ã–≤–µ–¥–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤: \`a    b    c\`, —Å –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º –ø–æ —à–∏—Ä–∏–Ω–µ 5
3. –ù–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–æ–∫–µ –≤—ã–≤–µ–¥–∏ —Å–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è \`a, b, c\`, —Ç–æ–∂–µ —Å \`std::setw(5)\` –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
    a    b    c
   10   20   30
\`\`\`

üß† –ö—Ä–∞—Å–∏–≤—ã–π –∏ —á–∏—Ç–∞–µ–º—ã–π –≤—ã–≤–æ–¥ ‚Äî –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å —Ö–æ—Ä–æ—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –¥–∞–∂–µ –≤ –∫–æ–Ω—Å–æ–ª–∏!

–§–æ—Ä–º–∞—Ç–∏—Ä—É–π –∫–æ–¥ ‚Äî –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç! ‚ú®üìè
`,
                starterCode: `#include <iostream>
          #include <iomanip>
          
          int main() {
              int a, b, c;
              // –°—á–∏—Ç–∞–π—Ç–µ a, b, c:
              // std::cin >> a >> b >> c;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å setw(5):
              // std::cout << std::setw(5) << "a" << std::setw(5) << "b" << std::setw(5) << "c" << std::endl;
          
              // –í—ã–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è a, b, c –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ:
              // std::cout << std::setw(5) << a << std::setw(5) << b << std::setw(5) << c << std::endl;
          
              return 0;
          }`,
                solution: `#include <iostream>
          #include <iomanip>
          
          int main() {
              int a, b, c;
              std::cin >> a >> b >> c;
          
              std::cout << std::setw(5) << "a" << std::setw(5) << "b" << std::setw(5) << "c" << std::endl;
              std::cout << std::setw(5) << a << std::setw(5) << b << std::setw(5) << c << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^\\s*a\\s*b\\s*c\\s*$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–∫–∏ a, b, c, –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—ã–µ –ø–æ —à–∏—Ä–∏–Ω–µ 5'
                  },
                  {
                    regex: '^\\s*10\\s*20\\s*30\\s*$',
                    message: '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 10, 20, 30, –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—ã–µ –ø–æ —à–∏—Ä–∏–Ω–µ 5'
                  }
                ],
                xp: 10,
                difficulty: 'Easy'
              },
              {
                id: 'text-file-io',
                title: '–ó–∞–ø–∏—Å—å –∏ —á—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª',
                description: `
üóÉÔ∏è –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è **–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –∏ —Å—á–∏—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞** —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ C++.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è \`<fstream>\`
  - \`std::ofstream\` ‚Äî –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª
  - \`std::ifstream\` ‚Äî –¥–ª—è —á—Ç–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
- –°—Ç—Ä—É–∫—Ç—É—Ä—ã —É–¥–æ–±–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Å—É—â–Ω–æ—Å—Ç–µ–π, —Ç–∞–∫–∏—Ö –∫–∞–∫ —Å—Ç—É–¥–µ–Ω—Ç—ã
- –ù–µ –∑–∞–±—É–¥—å –∑–∞–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏ –∏–ª–∏ —á—Ç–µ–Ω–∏—è: \`file.close()\`

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
   \`struct Student { std::string name; int age; };\`
2. –í \`main()\` —Å–æ–∑–¥–∞–π –º–∞—Å—Å–∏–≤:
   \`Student arr[3] = { {"Ivan", 20}, {"Maria", 22}, {"Petr", 19} };\`
3. –ó–∞–ø–∏—à–∏ –º–∞—Å—Å–∏–≤ –≤ —Ñ–∞–π–ª \`students.txt\`, –ø–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ: \`–∏–º—è –≤–æ–∑—Ä–∞—Å—Ç\`
4. –ó–∞–∫—Ä–æ–π —Ñ–∞–π–ª, –∑–∞—Ç–µ–º —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä–æ–π –µ–≥–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
5. –°—á–∏—Ç–∞–π –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –∏ –≤—ã–≤–µ–¥–∏ –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
Ivan 20
Maria 22
Petr 19
\`\`\`

üìÇ –£–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ ‚Äî –≤–∞–∂–Ω—ã–π –Ω–∞–≤—ã–∫ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤–Ω–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.

–ó–∞–ø–∏—Å—ã–≤–∞–π. –ß–∏—Ç–∞–π. –ü–æ–≤—Ç–æ—Ä—è–π. üìùüîÅ
`,
                starterCode: `#include <iostream>
          #include <fstream>
          #include <string>
          
          struct Student {
              // std::string name;
              // int age;
          };
          
          int main() {
              Student arr[3] = {
                  // {"Ivan", 20},
                  // {"Maria", 22},
                  // {"Petr", 19}
              };
          
              // –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª:
              // std::ofstream ofs("students.txt");
              // for (int i = 0; i < 3; ++i) {
              //     ofs << arr[i].name << " " << arr[i].age << std::endl;
              // }
              // ofs.close();
          
              // –ß—Ç–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞:
              // std::ifstream ifs("students.txt");
              // std::string name;
              // int age;
              // while (ifs >> name >> age) {
              //     std::cout << name << " " << age << std::endl;
              // }
              // ifs.close();
          
              return 0;
          }`,
                solution: `#include <iostream>
          #include <fstream>
          #include <string>
          
          struct Student {
              std::string name;
              int age;
          };
          
          int main() {
              Student arr[3] = {
                  {"Ivan", 20},
                  {"Maria", 22},
                  {"Petr", 19}
              };
          
              std::ofstream ofs("students.txt");
              for (int i = 0; i < 3; ++i) {
                  ofs << arr[i].name << " " << arr[i].age << std::endl;
              }
              ofs.close();
          
              std::ifstream ifs("students.txt");
              std::string name;
              int age;
              while (ifs >> name >> age) {
                  std::cout << name << " " << age << std::endl;
              }
              ifs.close();
          
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^Ivan 20$',
                    message: '–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å: Ivan 20'
                  },
                  {
                    regex: '^Maria 22$',
                    message: '–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å: Maria 22'
                  },
                  {
                    regex: '^Petr 19$',
                    message: '–¢—Ä–µ—Ç—å—è —Å—Ç—Ä–æ–∫–∞ —Ñ–∞–π–ª–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å: Petr 19'
                  }
                ],
                xp: 15,
                difficulty: 'Medium'
              },
              {
                id: 'binary-file-io',
                title: '–ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –º–∞—Å—Å–∏–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –≤ –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª',
                description: `
üíæ –í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å **–±–∏–Ω–∞—Ä–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏** –≤ C++, —Å–æ—Ö—Ä–∞–Ω—è—è –∏ –∑–∞–≥—Ä—É–∂–∞—è –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –Ω–∞–ø—Ä—è–º—É—é –∏–∑ –ø–∞–º—è—Ç–∏.

---

### üí° –ß—Ç–æ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å:
- –î–ª—è –±–∏–Ω–∞—Ä–Ω–æ–π –∑–∞–ø–∏—Å–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç \`std::ofstream\`, –∞ –¥–ª—è —á—Ç–µ–Ω–∏—è ‚Äî \`std::ifstream\`
- –ß—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ, –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ñ–ª–∞–≥ \`std::ios::binary\`
- –§—É–Ω–∫—Ü–∏–∏ \`.write()\` –∏ \`.read()\` –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å "—Å—ã—Ä—ã–º–∏" –±–∞–π—Ç–∞–º–∏

---

### ‚úÖ –ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:
1. –û–±—ä—è–≤–∏ –º–∞—Å—Å–∏–≤: \`int arr[5] = {1, 2, 3, 4, 5};\`
2. –û—Ç–∫—Ä–æ–π —Ñ–∞–π–ª \`data.bin\` —Å –ø–æ–º–æ—â—å—é \`std::ofstream\` –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ –∏ –∑–∞–ø–∏—à–∏ –º–∞—Å—Å–∏–≤:
   - \`file.write(reinterpret_cast<char*>(arr), sizeof(arr));\`
3. –ó–∞–∫—Ä–æ–π —Ñ–∞–π–ª, –∑–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π –µ–≥–æ —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é \`std::ifstream\` –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ
4. –°—á–∏—Ç–∞–π –¥–∞–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤ \`int buf[5];\`:
   - \`file.read(reinterpret_cast<char*>(buf), sizeof(buf));\`
5. –í—ã–≤–µ–¥–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É—Ñ–µ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å, —Ä–∞–∑–¥–µ–ª—è—è —á–∏—Å–ª–∞ –ø—Ä–æ–±–µ–ª–∞–º–∏

---

üìå –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
\`\`\`
1 2 3 4 5
\`\`\`

üß† –†–∞–±–æ—Ç–∞ —Å –±–∏–Ω–∞—Ä–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ ‚Äî —ç—Ç–æ –ø—Ä—è–º–æ–π –ø—É—Ç—å –∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∏ –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏.

–ß—Ç–µ–Ω–∏–µ, –∑–∞–ø–∏—Å—å –∏ —Ä–∞–±–æ—Ç–∞ —Å –±–∞–π—Ç–∞–º–∏ ‚Äî —Ç—ã —É–ø—Ä–∞–≤–ª—è–µ—à—å –ø–∞–º—è—Ç—å—é –Ω–∞–ø—Ä—è–º—É—é! üß†üíΩ
`,
                starterCode: `#include <iostream>
          #include <fstream>
          
          int main() {
              int arr[5] = {1, 2, 3, 4, 5};
          
              // –ó–∞–ø–∏—Å—å –≤ –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–∞–π–ª:
              // std::ofstream ofs("data.bin", std::ios::binary);
              // ofs.write(reinterpret_cast<char*>(arr), sizeof(arr));
              // ofs.close();
          
              // –ß—Ç–µ–Ω–∏–µ –∏–∑ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ —Ñ–∞–π–ª–∞:
              // int buf[5];
              // std::ifstream ifs("data.bin", std::ios::binary);
              // ifs.read(reinterpret_cast<char*>(buf), sizeof(buf));
              // ifs.close();
          
              // –í—ã–≤–µ–¥–∏—Ç–µ buf —á–µ—Ä–µ–∑ —Ü–∏–∫–ª—ã, —Ä–∞–∑–¥–µ–ª—è—è –ø—Ä–æ–±–µ–ª–∞–º–∏:
              // for (int i = 0; i < 5; ++i) {
              //     std::cout << buf[i] << " ";
              // }
          
              return 0;
          }`,
                solution: `#include <iostream>
          #include <fstream>
          
          int main() {
              int arr[5] = {1, 2, 3, 4, 5};
          
              std::ofstream ofs("data.bin", std::ios::binary);
              ofs.write(reinterpret_cast<char*>(arr), sizeof(arr));
              ofs.close();
          
              int buf[5];
              std::ifstream ifs("data.bin", std::ios::binary);
              ifs.read(reinterpret_cast<char*>(buf), sizeof(buf));
              ifs.close();
          
              for (int i = 0; i < 5; ++i) {
                  std::cout << buf[i] << " ";
              }
              std::cout << std::endl;
              return 0;
          }`,
                testCases: [
                  {
                    regex: '^1 2 3 4 5 $',
                    message: '–û–∂–∏–¥–∞–ª—Å—è –≤—ã–≤–æ–¥: 1 2 3 4 5 '
                  }
                ],
                xp: 15,
                difficulty: 'Medium'
              }
            ]
          }          
        ]
      };
  
export default cppCourseData;
  